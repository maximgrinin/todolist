version: '3.8'

services:
  db:
    image: postgres:14.6-alpine
    container_name: todolist_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: "md5"
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 3s
      retries: 5
    restart: always
    ports:
    - "5432:5432"

  api:
    build:
      target: dev_image
      context: .
    restart: always
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8000:8000
    volumes:
      - ./core:/opt/core
      - ./goals:/opt/goals
      - ./bot:/opt/bot
      - ./todolist:/opt/todolist

  collect_static:
    build:
      target: dev_image
      context: .
    env_file: .env
    entrypoint: ''
    volumes:
      - django_static:/opt/static/
    command: python3 manage.py collectstatic -c --no-input

  bot:
    build:
      target: dev_image
      context: .
    restart: always
    env_file: .env
    depends_on:
      api:
        condition: service_started
      db:
        condition: service_healthy
    command: python3 manage.py runbot

  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/

volumes:
  postgres_data:
  django_static:
