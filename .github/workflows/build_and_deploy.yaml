name: build and deploy workflow
on:
  push:
    branch:
      - 'main'
jobs:
  linting_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build_and_push:
    runs-on: ubuntu-latest
    needs: linting_and_test
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: dockerhub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          target: dev_image
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/diploma_todolist:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: .env decrypt
        uses: anthonykgross/ansible-vault-cli-github-action@v1
        with:
          vault_key: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          command: "ansible-vault decrypt deploy/.env"
      - name: copy file to server via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: "diploma_todolist"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd diploma_todolist
            docker-compose pull
            docker-compose up -d
      - name: cleanup
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker system prune -a -f
